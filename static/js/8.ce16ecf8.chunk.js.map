{"version":3,"sources":["components/PopUp/popUp.js","components/BookingForm/bookingForm.js","pages/AppointmentPage/appointmentPage.js"],"names":["connect","state","bookingMessageStatus","userReducer","dispatch","children","setTimeout","sendingMessageStatus","className","role","style","visibility","BookingForm","sendMessageWithEmailJs","emailjs","send","process","then","result","text","props","console","log","error","handleSubmit","event","preventDefault","setState","email","name","date","time","phone","message","handleOnChange","target","value","this","history","pathname","location","Form","onSubmit","FormControl","onChange","type","placeholder","aria-label","required","Group","Label","min","todayDate","aria-describedby","max","day","Control","as","rows","cols","buttonName","Component","withRouter","AppointmentPage"],"mappings":"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","file":"static/js/8.ce16ecf8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./popUp.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendingMessageStatus } from \"../../redux/redux-actions\";\r\n\r\nconst PopUp = ({ dispatch, children, bookingMessageStatus }) => {\r\n\r\n  if (bookingMessageStatus) {\r\n    setTimeout(\r\n      () => dispatch(sendingMessageStatus(bookingMessageStatus)),\r\n      3000\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`popup-container `}\r\n      role=\"button\"\r\n      style={\r\n        !bookingMessageStatus\r\n          ? { visibility: \"hidden\" }\r\n          : { visibility: \"visible\" }\r\n      }\r\n    >\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bookingMessageStatus: state.userReducer.bookingMessageStatus,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PopUp);\r\n","import React, { Component } from \"react\";\r\nimport \"./bookingForm.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { todayDate, day } from \"../../DATA\";\r\nimport { sendingMessageStatus } from \"../../redux/redux-actions\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport BookButton from \"../../components/BookButton/bookButton\";\r\nimport PopUp from \"../PopUp/popUp\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nclass BookingForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      name: \"\",\r\n      date: \"\",\r\n      time: \"\",\r\n      phone: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  sendMessageWithEmailJs = () => {\r\n    emailjs\r\n      .send(\r\n        process.env.REACT_APP_YOUR_SERVICE_ID,\r\n        process.env.REACT_APP_YOUR_TEMPLATE_ID,\r\n        this.state,\r\n        process.env.REACT_APP_YOUR_USER_ID\r\n      )\r\n      .then(\r\n        (result) => {\r\n          if (result.text === \"OK\") {\r\n            this.props.dispatch(\r\n              sendingMessageStatus(this.props.bookingMessageStatus)\r\n            );\r\n            console.log(\"SUCCES\", result.text);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED\", error.text);\r\n        }\r\n      );\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.sendMessageWithEmailJs();\r\n    this.setState({\r\n      email: \"\",\r\n      name: \"\",\r\n      date: \"\",\r\n      time: \"\",\r\n      phone: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    const name = event.target.name;\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { history, bookingMessageStatus } = this.props;\r\n    const { pathname } = history.location;\r\n\r\n    const { email, name, date, time, phone, message } = this.state;\r\n\r\n    return (\r\n      <Form\r\n        onSubmit={this.handleSubmit}\r\n        className={`appointment ${\r\n          pathname === \"/appointmentPage\" ? \"substractMarginBottom\" : \"\"\r\n        } `}\r\n      >\r\n        <div className=\"appointment-text\">\r\n          <h1>Book Appointment</h1>\r\n          <h6>We are here for you</h6>\r\n        </div>\r\n        <FormControl\r\n          onChange={this.handleOnChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          aria-label=\"Email\"\r\n          value={email}\r\n          name=\"email\"\r\n          required\r\n        />\r\n        <div className=\"appointment-inputs\">\r\n          <Form.Group className=\"group\">\r\n            <FormControl\r\n              onChange={this.handleOnChange}\r\n              type=\"text\"\r\n              placeholder=\"Your Full Name\"\r\n              aria-label=\"Your Full Name\"\r\n              value={name}\r\n              name=\"name\"\r\n              required\r\n            />\r\n            <Form.Label>Date</Form.Label>\r\n            <FormControl\r\n              onChange={this.handleOnChange}\r\n              type=\"date\"\r\n              placeholder=\"Date\"\r\n              aria-label=\"Date\"\r\n              min={todayDate()}\r\n              value={date}\r\n              name=\"date\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"group\">\r\n            <FormControl\r\n              onChange={this.handleOnChange}\r\n              type=\"phone\"\r\n              placeholder=\"Phone\"\r\n              aria-label=\"Phone\"\r\n              aria-describedby=\"basic-addon1\"\r\n              value={phone}\r\n              name=\"phone\"\r\n              required\r\n            />\r\n            <Form.Label>Time</Form.Label>\r\n            <FormControl\r\n              onChange={this.handleOnChange}\r\n              type=\"time\"\r\n              min=\"08:00\"\r\n              max={`${day() === 6 ? \"14:00\" : \"20:00\"}`}\r\n              placeholder=\"Time\"\r\n              aria-label=\"Time\"\r\n              aria-describedby=\"basic-addon1\"\r\n              value={time}\r\n              name=\"time\"\r\n              required\r\n            />\r\n            {/* <span className=\"validity\"></span> */}\r\n          </Form.Group>\r\n        </div>\r\n        <Form.Control\r\n          onChange={this.handleOnChange}\r\n          as=\"textarea\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          placeholder=\"Special request...\"\r\n          value={message}\r\n          name=\"message\"\r\n        ></Form.Control>\r\n        <div className=\"buttonAndPopUp-container\">\r\n          <BookButton buttonName=\"BOOK\" />\r\n          <PopUp bookingMessageStatus={bookingMessageStatus}>Sent</PopUp>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bookingMessageStatus: state.userReducer.bookingMessageStatus,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(BookingForm));\r\n","import React from \"react\";\r\nimport \"./appointmentPage.css\";\r\nimport BookingForm from \"../../components/BookingForm/bookingForm\";\r\n\r\nconst AppointmentPage = () => {\r\n\r\n    \r\n  return (\r\n    <div className=\"appointmentPage-container container\">\r\n      <BookingForm  />\r\n      <div className=\"appointmentPage-contactInfo\">\r\n        <div className=\"appointmentPage-contactInfo-text\">\r\n          <h1>Contact</h1>\r\n          <div className=\"appointmentPage-firstText-container\">\r\n            <h6 className=\"appointmentPage-firstText\">\r\n              MONDAY - FRIDAY{\" \"}\r\n            </h6>\r\n            <h6 className=\"appointmentPage-hours\">08:00 - 19:00</h6>\r\n          </div>\r\n\r\n          <div className=\"appointmentPage-firstText-container\">\r\n            <h6 className=\"appointmentPage-firstText\">\r\n            SATURDAY{\" \"}\r\n            </h6>\r\n            <h6 className=\"appointmentPage-hours\">08:00 - 14:00</h6>\r\n          </div>\r\n\r\n          <div className=\"appointmentPage-firstText-container\">\r\n            <h6 className=\"appointmentPage-firstText\">\r\n            SUNDAY{\" \"}\r\n            </h6>\r\n            <h6 className=\"appointmentPage-hours\">CLOSED</h6>\r\n          </div>\r\n\r\n          <div className=\"appointmentPage-firstText-container\">\r\n            <h6 className=\"appointmentPage-firstText\">\r\n            TEL{\" \"}\r\n            </h6>\r\n            <h6 className=\"appointmentPage-hours\">0172 3465694</h6>\r\n          </div>\r\n\r\n          <div className=\"appointmentPage-firstText-container\">\r\n            <h6 className=\"appointmentPage-firstText\">\r\n            EMAIL{\" \"}\r\n            </h6>\r\n            <h6 className=\"appointmentPage-hours\">physiopraxis.marian@gmail.com</h6>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentPage;\r\n"],"sourceRoot":""}