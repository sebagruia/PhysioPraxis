{"version":3,"sources":["pages/PostPage/postPage.js"],"names":["connect","state","news","userReducer","refToPost","useRef","useEffect","current","scrollIntoView","behavior","block","inline","params","useParams","postObj","length","filter","post","arangedTitle","postTitle","post_id","id","createDate","postImageLink","postText","parsedTitle","name","content","property","process","slice","className","ref","date","image","title","text"],"mappings":"8NAyEeA,uBANS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAME,YAAYD,QAIbF,EAjEE,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACZE,EAAYC,iBAAO,MAEzBC,qBAAU,WACRF,EAAUG,QAAQC,eAAe,CAC/BC,SAAU,SACVC,MAAO,QACPC,OAAQ,eAIZ,IAAMC,EAASC,cACTC,EACY,IAAhBZ,EAAKa,QACLb,EAAKc,QAAO,SAACC,GAAD,OAAUC,YAAaD,EAAKE,aAAeP,EAAOQ,WAdnC,EAgB3BN,GAAWA,EAAQ,GADbO,EAfqB,EAerBA,GAAIC,EAfiB,EAejBA,WAAYC,EAfK,EAeLA,cAAeJ,EAfV,EAeUA,UAAWK,EAfrB,EAeqBA,SAG5CC,EAAcN,GAAaD,YAAaC,GAC9C,OACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,gCAAQA,GAAaA,IACrB,sBAAMO,KAAK,cAAcC,QAASH,GAAYA,IAC9C,sBAAMI,SAAS,WAAWD,QAASR,GAAaA,IAChD,sBACES,SAAS,eACTD,QAASJ,GAAiBA,IAE5B,sBACEK,SAAS,sBACTD,QAASJ,GAAiBA,IAE5B,sBAAMK,SAAS,gBAAgBD,QAAQ,eACvC,sBAAMC,SAAS,iBAAiBD,QAAQ,QACxC,sBAAMC,SAAS,kBAAkBD,QAAQ,QACzC,sBAAMC,SAAS,eAAeD,QAAQ,iCACtC,sBACEC,SAAS,SACTD,QAAO,UAAKE,4CAAL,iBAA8CJ,KAEvD,sBACEG,SAAS,iBACTD,QAAO,UAAKH,GAAYA,EAASM,MAAM,EAAG,KAAnC,YAGX,qBAAKC,UAAU,+BAA+BC,IAAK5B,EAAnD,SACE,cAAC,IAAD,CACEiB,GAAIA,EACJY,KAAMX,EACNY,MAAOX,EACPY,MAAOhB,EACPiB,KAAMZ","file":"static/js/12.df780c30.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./postPage.css\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Post from \"../../components/Post/post\";\r\nimport { arangedTitle } from \"../../DATA\";\r\n\r\nconst PostPage = ({ news }) => {\r\n  const refToPost = useRef(null);\r\n\r\n  useEffect(() => {\r\n    refToPost.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n      inline: \"nearest\",\r\n    });\r\n  });\r\n\r\n  const params = useParams();\r\n  const postObj =\r\n    news.length !== 0 &&\r\n    news.filter((post) => arangedTitle(post.postTitle) === params.post_id);\r\n  const { id, createDate, postImageLink, postTitle, postText } =\r\n    postObj && postObj[0];\r\n\r\n  const parsedTitle = postTitle && arangedTitle(postTitle);\r\n  return (\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>{postTitle && postTitle}</title>\r\n        <meta name=\"description\" content={postText && postText} />\r\n        <meta property=\"og:title\" content={postTitle && postTitle}></meta>\r\n        <meta\r\n          property=\"og:image:url\"\r\n          content={postImageLink && postImageLink}\r\n        />\r\n        <meta\r\n          property=\"og:image:secure_url\"\r\n          content={postImageLink && postImageLink}\r\n        />\r\n        <meta property=\"og:image:type\" content=\"image/jpeg\" />\r\n        <meta property=\"og:image:width\" content=\"400\" />\r\n        <meta property=\"og:image:height\" content=\"300\" />\r\n        <meta property=\"og:image:alt\" content=\"The PhysioPraxis Marian Logo\" />\r\n        <meta\r\n          property=\"og:url\"\r\n          content={`${process.env.REACT_APP_PUBLIC_URL}/news/${parsedTitle}`}\r\n        />\r\n        <meta\r\n          property=\"og:description\"\r\n          content={`${postText && postText.slice(0, 120)}...`}\r\n        />\r\n      </Helmet>\r\n      <div className=\"postPage-container container\" ref={refToPost}>\r\n        <Post\r\n          id={id}\r\n          date={createDate}\r\n          image={postImageLink}\r\n          title={postTitle}\r\n          text={postText}\r\n        />\r\n      </div>\r\n    </HelmetProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    news: state.userReducer.news,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PostPage);\r\n"],"sourceRoot":""}